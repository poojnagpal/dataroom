{"ast":null,"code":"var _jsxFileName = \"/Users/ripplingadmin/dataroom/client/src/DataRoom.js\",\n  _s = $RefreshSig$();\n// DataRoom.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Dataroom.css'; // Make sure to create this CSS file\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DataRoom() {\n  _s();\n  const [roomName, setRoomName] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const [uploadError, setUploadError] = useState('');\n  const [contextMenu, setContextMenu] = useState(null);\n  const [renamingItemId, setRenamingItemId] = useState(null);\n  const [renamingValue, setRenamingValue] = useState('');\n  const navigate = useNavigate(); // Move this inside the DataRoom function component\n\n  useEffect(() => {\n    const authToken = localStorage.getItem('authToken');\n    if (!authToken) {\n      // Redirect to login page if the authToken is not present\n      navigate('/');\n    }\n  }, [navigate]);\n  const [items, setItems] = useState([\n  // Example structure\n  {\n    id: 'folder2',\n    name: 'Lawsuits',\n    type: 'folder',\n    isOpen: false,\n    children: []\n  }, {\n    id: 'folder1',\n    name: 'Folder 1',\n    type: 'folder',\n    isOpen: false,\n    children: []\n  }\n  // Add more files and folders as needed\n  ]);\n  const [type, setType] = useState('');\n  const [overFolder, setOverFolder] = useState(null);\n  const [currentDropTarget, setCurrentDropTarget] = useState(null);\n  const [dragging, setDragging] = useState(false);\n  const [structure, setStructure] = useState(false);\n  const [showOptionsId, setShowOptionsId] = useState(null);\n  const [showOptions, setShowOptions] = useState(null);\n  const handleContextMenuAction = (action, itemId) => {\n    if (action === 'delete') {\n      // Logic to delete the item\n      setItems(items.filter(item => item.id !== itemId));\n    } else if (action === 'rename') {\n      // Logic to rename the item\n      const newName = prompt('Enter the new name:', '');\n      if (newName) {\n        setItems(items.map(item => item.id === itemId ? {\n          ...item,\n          name: newName\n        } : item));\n      }\n    }\n    setContextMenu(null); // Hide context menu after action\n  };\n  const handleRightClick = (e, itemId) => {\n    e.preventDefault();\n    setContextMenu({\n      itemId: itemId,\n      position: {\n        top: e.clientY,\n        left: e.clientX\n      }\n    });\n  };\n  const handleDelete = itemId => {\n    // Update the items state to filter out the deleted item\n    setItems(prevItems => prevItems.filter(item => item.id !== itemId));\n    setShowOptions(null); // Close the options menu\n  };\n  const handleEdit = itemId => {\n    // Prompt the user for a new name\n    const newName = window.prompt('Enter the new name:', '');\n    if (newName && newName.trim() !== '') {\n      setItems(prevItems => prevItems.map(item => item.id === itemId ? {\n        ...item,\n        name: newName\n      } : item));\n    }\n    setShowOptions(null); // Close the options menu\n  };\n  const handleView = fileName => {\n    console.log('file name', fileName);\n    axios.get(`/view-file?fileName=${encodeURIComponent(fileName)}`).then(response => {\n      const fileUrl = response.data.url;\n      window.open(fileUrl, '_blank'); // Open the file URL in a new tab\n    }).catch(error => {\n      console.error('Error fetching file URL', error);\n    });\n  };\n  const handleDragEnd = () => {\n    // Reset the dragging state when the drag ends\n    setDragging(false);\n  };\n  const handleDragEnter = (e, folderName) => {\n    e.preventDefault();\n    setCurrentDropTarget(folderName); // Set the current drop target to the folder being dragged over\n  };\n  const handleDragLeave = (e, folderName) => {\n    e.preventDefault();\n    // Only unset the current drop target if leaving the current target (not on child elements)\n    if (currentDropTarget === folderName) {\n      setCurrentDropTarget(null);\n    }\n  };\n  const handleDrop = (e, folder) => {\n    e.preventDefault(); // Prevent default to allow the drop\n    const itemData = e.dataTransfer.getData('application/json');\n    const draggedItem = JSON.parse(itemData);\n\n    // Prevent file from being dropped into itself or a non-folder\n    if (draggedItem.id === folder.id || folder.type !== 'folder') {\n      return;\n    }\n\n    // Update the items, moving the draggedItem into the folder\n    setItems(prevItems => {\n      // Remove the item from its current position\n      const withoutDraggedItem = prevItems.filter(item => item.id !== draggedItem.id);\n      // Add the item as a child of the folder\n      const updatedItems = withoutDraggedItem.map(item => {\n        if (item.id === folder.id) {\n          return {\n            ...item,\n            children: [...item.children, {\n              ...draggedItem,\n              parentId: folder.id\n            }]\n          };\n        }\n        return item;\n      });\n      return updatedItems;\n    });\n  };\n  const handleOptionsClick = (e, itemId) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const optionsIcon = e.currentTarget;\n    const rect = optionsIcon.getBoundingClientRect();\n    setShowOptions(itemId); // Set the item to show options for\n    setContextMenu({\n      itemId: itemId,\n      position: {\n        top: rect.bottom + window.scrollY,\n        left: rect.right + window.scrollX\n      }\n    });\n  };\n  const handleRenameClick = itemId => {\n    console.log('Attempting to rename item with id:', itemId);\n    const currentItem = items.find(item => item.id === itemId);\n    if (currentItem) {\n      setRenamingItemId(itemId);\n      setRenamingValue(currentItem.name);\n      setContextMenu(null);\n    }\n  };\n  const handleSaveNewName = (e, itemId) => {\n    e.preventDefault();\n    const newName = renamingValue.trim();\n    if (newName) {\n      setItems(prevItems => prevItems.map(item => item.id === itemId ? {\n        ...item,\n        name: newName\n      } : item));\n      setRenamingItemId(null);\n    }\n  };\n  const displayContextMenu = (e, itemId) => {\n    e.preventDefault();\n    setContextMenu({\n      itemId: itemId,\n      position: {\n        x: e.clientX,\n        y: e.clientY\n      }\n    });\n  };\n  const displayItem = item => {\n    const isRenaming = renamingItemId === item.id;\n    const handleDragStart = (e, item) => {\n      // We'll use JSON.stringify to store the item's data\n      e.dataTransfer.setData('application/json', JSON.stringify(item));\n      e.dataTransfer.effectAllowed = 'move';\n    };\n    const handleDragOver = (e, folder) => {\n      // If we're dragging over a folder, we need to prevent the default behavior\n      // to allow for a drop event\n      if (folder.type === 'folder') {\n        e.preventDefault();\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      draggable: item.type === 'file',\n      onDragStart: e => handleDragStart(e, item),\n      onDragOver: e => handleDragOver(e, item),\n      onDrop: e => handleDrop(e, item),\n      onDragEnd: handleDragEnd,\n      className: `file-item ${isRenaming ? 'renaming' : ''}`,\n      children: [item.type === 'folder' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle-icon\",\n          onClick: () => toggleFolder(item.id),\n          children: item.isOpen ? '▼' : '►'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-icon\",\n          onClick: toggleFolder,\n          children: \"\\uD83D\\uDCC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"file-icon\",\n        children: item.type === 'folder' ? '📁' : '📄'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), isRenaming ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inline-rename-input\",\n        value: renamingValue,\n        onChange: e => setRenamingValue(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            // Pass the event object and other parameters\n            handleSaveNewName(e, item.id, renamingValue);\n          }\n        },\n        onBlur: e => {\n          // Pass the event object and other parameters\n          handleSaveNewName(e, item.id, renamingValue);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"file-name\",\n        onDoubleClick: () => handleRenameClick(item.id),\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"options-icon\",\n        onClick: e => handleOptionsClick(e, item.id),\n        children: \"\\u22EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), contextMenu && contextMenu.itemId === item.id && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"context-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleRenameClick(item.id),\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleDelete(item.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleView(item.name),\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), item.type === 'folder' && item.isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"folder-contents\",\n        children: item.children && item.children.map(child => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-icon\",\n            children: \"\\uD83D\\uDCC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-name\",\n            children: child.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, child.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  };\n  const renderItemstwo = (parentId = null) => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.filter(item => item.parentId === parentId).map(displayItem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Recursive function to render items\n  const renderItems = (parentId = null) => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.filter(item => item.parentId === parentId).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: item.type,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"item-icon\",\n          onClick: () => item.type === 'folder' && toggleFolder(item.id),\n          children: item.type === 'folder' ? item.isOpen ? '▼' : '►' : '📄'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"item-name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"options-icon\",\n          onClick: e => handleOptionsClick(e, item.id, 'options'),\n          children: \" \\u22EE \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), showOptions === item.id && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"context-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleEdit(item.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleDelete(item.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this), item.type === 'folder' && item.isOpen && renderItems(item.id)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }, this);\n  };\n\n  // Function to toggle a folder open or closed\n  const toggleFolder = folderId => {\n    setItems(items => items.map(item => {\n      if (item.id === folderId && item.type === 'folder') {\n        return {\n          ...item,\n          isOpen: !item.isOpen\n        };\n      }\n      return item;\n    }));\n  };\n  const createFolder = (parentId = null) => {\n    if (!newFolderName.trim()) {\n      setUploadError('Please enter a folder name.');\n      return;\n    }\n    const newFolder = {\n      id: `folder-${Date.now()}`,\n      // Generate a unique ID for the folder\n      name: newFolderName,\n      type: 'folder',\n      parentId: parentId,\n      // Set the parent ID\n      isOpen: false,\n      children: [] // Initialize an empty array for children\n    };\n    setItems([...items, newFolder]);\n    setNewFolderName(''); // Reset the input field\n    setUploadError(''); // Clear any previous errors\n  };\n  const uploadFile = () => {\n    if (!selectedFile) {\n      setUploadError('Please select a file to upload.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    axios.post('/upload-file', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setUploadSuccess(true);\n      setUploadError('');\n      setItems([...items, {\n        name: selectedFile.name,\n        type: 'file',\n        modified: 'Just now',\n        members: 'Only you'\n      }]);\n      console.log('File uploaded successfully', response.data);\n    }).catch(error => {\n      setUploadSuccess(false);\n      setUploadError('Error uploading file. Please try again.');\n      console.error('Error uploading file', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-room\",\n    onClick: () => setContextMenu(null),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setSelectedFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      class: \"form-field\",\n      type: \"text\",\n      placeholder: \"Enter New Folder Name\",\n      value: newFolderName,\n      onChange: e => setNewFolderName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-6\",\n      onClick: createFolder,\n      children: \"Create Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-list\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-success\",\n      children: \"Your file was uploaded successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 25\n    }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-error\",\n      children: uploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"file-list\",\n      children: items.map(displayItem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 1\n  }, this);\n}\n_s(DataRoom, \"gfTribgwvyTIFBA0w0v9D27bIVU=\", false, function () {\n  return [useNavigate];\n});\n_c = DataRoom;\nexport default DataRoom;\nvar _c;\n$RefreshReg$(_c, \"DataRoom\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","DataRoom","_s","roomName","setRoomName","selectedFile","setSelectedFile","newFolderName","setNewFolderName","uploadSuccess","setUploadSuccess","uploadError","setUploadError","contextMenu","setContextMenu","renamingItemId","setRenamingItemId","renamingValue","setRenamingValue","navigate","authToken","localStorage","getItem","items","setItems","id","name","type","isOpen","children","setType","overFolder","setOverFolder","currentDropTarget","setCurrentDropTarget","dragging","setDragging","structure","setStructure","showOptionsId","setShowOptionsId","showOptions","setShowOptions","handleContextMenuAction","action","itemId","filter","item","newName","prompt","map","handleRightClick","e","preventDefault","position","top","clientY","left","clientX","handleDelete","prevItems","handleEdit","window","trim","handleView","fileName","console","log","get","encodeURIComponent","then","response","fileUrl","data","url","open","catch","error","handleDragEnd","handleDragEnter","folderName","handleDragLeave","handleDrop","folder","itemData","dataTransfer","getData","draggedItem","JSON","parse","withoutDraggedItem","updatedItems","parentId","handleOptionsClick","stopPropagation","optionsIcon","currentTarget","rect","getBoundingClientRect","bottom","scrollY","right","scrollX","handleRenameClick","currentItem","find","handleSaveNewName","displayContextMenu","x","y","displayItem","isRenaming","handleDragStart","setData","stringify","effectAllowed","handleDragOver","draggable","onDragStart","onDragOver","onDrop","onDragEnd","className","onClick","toggleFolder","_jsxFileName","lineNumber","columnNumber","value","onChange","target","onKeyDown","key","onBlur","autoFocus","onDoubleClick","child","renderItemstwo","renderItems","folderId","createFolder","newFolder","Date","now","uploadFile","formData","FormData","append","post","headers","modified","members","files","class","placeholder","_c","$RefreshReg$"],"sources":["/Users/ripplingadmin/dataroom/client/src/DataRoom.js"],"sourcesContent":["// DataRoom.js\nimport React, { useState,  useEffect} from 'react';\nimport axios from 'axios';\nimport './Dataroom.css'; // Make sure to create this CSS file\nimport { useNavigate } from 'react-router-dom';\n\n\n  \n\nfunction DataRoom() {\n  const [roomName, setRoomName] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const [uploadError, setUploadError] = useState('');\n  const [contextMenu, setContextMenu] = useState(null);\n  const [renamingItemId, setRenamingItemId] = useState(null);\n  const [renamingValue, setRenamingValue] = useState('');\n  const navigate = useNavigate(); // Move this inside the DataRoom function component\n\n  useEffect(() => {\n    const authToken = localStorage.getItem('authToken');\n    if (!authToken) {\n      // Redirect to login page if the authToken is not present\n      navigate('/');\n    }\n  }, [navigate]);\n\n\n\n  const [items, setItems] = useState([\n    // Example structure\n    { id: 'folder2', name: 'Lawsuits', type: 'folder', isOpen: false, children: [] },\n    { id: 'folder1', name: 'Folder 1', type: 'folder', isOpen: false, children: [] },\n    // Add more files and folders as needed\n  ]);\n    const [type, setType] = useState('')\n  const [overFolder, setOverFolder] = useState(null);\n  const [currentDropTarget, setCurrentDropTarget] = useState(null);\n  const [dragging, setDragging] = useState(false);\n  const [structure, setStructure] = useState(false);\n  const [showOptionsId, setShowOptionsId] = useState(null)\n  const [showOptions, setShowOptions] = useState(null)\n\n\n\n\n  const handleContextMenuAction = (action, itemId) => {\n    if (action === 'delete') {\n      // Logic to delete the item\n      setItems(items.filter(item => item.id !== itemId));\n    } else if (action === 'rename') {\n      // Logic to rename the item\n      const newName = prompt('Enter the new name:', '');\n      if (newName) {\n        setItems(items.map(item =>\n          item.id === itemId ? { ...item, name: newName } : item\n        ));\n      }\n    }\n    setContextMenu(null); // Hide context menu after action\n  };\n\n  const handleRightClick = (e, itemId) => {\n    e.preventDefault();\n    setContextMenu({\n      itemId: itemId,\n      position: { top: e.clientY, left: e.clientX }\n    });\n  };\n\n  const handleDelete = (itemId) => {\n    // Update the items state to filter out the deleted item\n    setItems(prevItems => prevItems.filter(item => item.id !== itemId));\n    setShowOptions(null); // Close the options menu\n  };\n\n  const handleEdit = (itemId) => {\n    // Prompt the user for a new name\n    const newName = window.prompt('Enter the new name:', '');\n    if (newName && newName.trim() !== '') {\n      setItems(prevItems =>\n        prevItems.map(item => (item.id === itemId ? { ...item, name: newName } : item))\n      );\n    }\n    setShowOptions(null); // Close the options menu\n  };\n\n  const handleView = (fileName) => {\n    console.log('file name', fileName)\n\n    axios.get(`/view-file?fileName=${encodeURIComponent(fileName)}`)\n      .then(response => {\n        const fileUrl = response.data.url;\n        window.open(fileUrl, '_blank'); // Open the file URL in a new tab\n      })\n      .catch(error => {\n        console.error('Error fetching file URL', error);\n      });\n  };\n\n  \n  const handleDragEnd = () => {\n    // Reset the dragging state when the drag ends\n    setDragging(false);\n  };\n\n\n\n  const handleDragEnter = (e, folderName) => {\n    e.preventDefault();\n    setCurrentDropTarget(folderName); // Set the current drop target to the folder being dragged over\n  };\n\n  const handleDragLeave = (e, folderName) => {\n    e.preventDefault();\n    // Only unset the current drop target if leaving the current target (not on child elements)\n    if (currentDropTarget === folderName) {\n      setCurrentDropTarget(null);\n    }\n  };\n\n  const handleDrop = (e, folder) => {\n    e.preventDefault(); // Prevent default to allow the drop\n    const itemData = e.dataTransfer.getData('application/json');\n    const draggedItem = JSON.parse(itemData);\n  \n    // Prevent file from being dropped into itself or a non-folder\n    if (draggedItem.id === folder.id || folder.type !== 'folder') {\n      return;\n    }\n  \n    // Update the items, moving the draggedItem into the folder\n    setItems((prevItems) => {\n      // Remove the item from its current position\n      const withoutDraggedItem = prevItems.filter(item => item.id !== draggedItem.id);\n      // Add the item as a child of the folder\n      const updatedItems = withoutDraggedItem.map(item => {\n        if (item.id === folder.id) {\n          return {\n            ...item,\n            children: [...item.children, { ...draggedItem, parentId: folder.id }]\n          };\n        }\n        return item;\n      });\n      return updatedItems;\n    });\n  };\n\n\n  const handleOptionsClick = (e, itemId) => {\n    e.stopPropagation();\n    e.preventDefault();\n    \n    \n    const optionsIcon = e.currentTarget;\n    const rect = optionsIcon.getBoundingClientRect();\n    setShowOptions(itemId); // Set the item to show options for\n    setContextMenu({\n      itemId: itemId,\n      position: { top: rect.bottom + window.scrollY, left: rect.right + window.scrollX }\n    });\n  };\n  \n\n  const handleRenameClick = (itemId) => {\n    console.log('Attempting to rename item with id:', itemId);\n    const currentItem = items.find(item => item.id === itemId);\n    if (currentItem) {\n      setRenamingItemId(itemId);\n      setRenamingValue(currentItem.name);\n      setContextMenu(null);\n    }\n  };\n\n  const handleSaveNewName = (e, itemId) => {\n    e.preventDefault();\n    const newName = renamingValue.trim();\n    if (newName) {\n      setItems((prevItems) =>\n        prevItems.map((item) => (item.id === itemId ? { ...item, name: newName } : item))\n      );\n      setRenamingItemId(null);\n    }\n  };\n\n  const displayContextMenu = (e, itemId) => {\n    e.preventDefault();\n    setContextMenu({\n      itemId: itemId,\n      position: { x: e.clientX, y: e.clientY },\n    });\n  };\n  \n  \n  \n  const displayItem = (item) => {\n    const isRenaming = renamingItemId === item.id;\n  \n    const handleDragStart = (e, item) => {\n      // We'll use JSON.stringify to store the item's data\n      e.dataTransfer.setData('application/json', JSON.stringify(item));\n      e.dataTransfer.effectAllowed = 'move';\n    };\n  \n    const handleDragOver = (e, folder) => {\n      // If we're dragging over a folder, we need to prevent the default behavior\n      // to allow for a drop event\n      if (folder.type === 'folder') {\n        e.preventDefault();\n      }\n    };\n  \n    return (\n      <li\n      key={item.id}\n      draggable={item.type === 'file'}\n      onDragStart={(e) => handleDragStart(e, item)}\n      onDragOver={(e) => handleDragOver(e, item)}\n      onDrop={(e) => handleDrop(e, item)}\n      onDragEnd={handleDragEnd}\n      className={`file-item ${isRenaming ? 'renaming' : ''}`}\n    >\n      \n      {item.type === 'folder' ? (\n        <>\n          <span  className=\"toggle-icon\" onClick={() => toggleFolder(item.id)} >{item.isOpen ? '▼' : '►'}</span>\n          <span className=\"file-icon\" onClick={toggleFolder}>📁</span>\n        </>\n      ) : (\n        <span className=\"file-icon\">{item.type === 'folder' ? '📁' : '📄'}</span>\n      )}\n        {isRenaming ? (\n          <input\n            className=\"inline-rename-input\"\n            value={renamingValue}\n            onChange={(e) => setRenamingValue(e.target.value)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                // Pass the event object and other parameters\n                handleSaveNewName(e, item.id, renamingValue);\n              }\n            }}\n            onBlur={(e) => {\n              // Pass the event object and other parameters\n              handleSaveNewName(e, item.id, renamingValue);\n            }}\n            autoFocus\n          />\n        ) : (\n          <span className=\"file-name\" onDoubleClick={() => handleRenameClick(item.id)}>\n            {item.name}\n          </span>\n        )}\n  \n        <span className=\"options-icon\" onClick={(e) => handleOptionsClick(e, item.id)}>⋮</span>\n  \n              {contextMenu && contextMenu.itemId === item.id && (\n        <ul className=\"context-menu\" >\n          <li onClick={() => handleRenameClick(item.id)}>Rename</li>\n          <li onClick={() => handleDelete(item.id)}>Delete</li>\n          <li onClick={() => handleView(item.name)}>View</li>\n\n\n        </ul>\n)}\n{item.type === 'folder' && item.isOpen && (\n        <ul className=\"folder-contents\">\n          {item.children && item.children.map(child => (\n            <li key={child.id} className=\"file-item\">\n              <span className=\"file-icon\">📄</span>\n              <span className=\"file-name\">{child.name}</span>\n              {/* Include rename, delete, etc. for child items if needed */}\n            </li>\n          ))}\n        </ul>\n      )}\n      </li>\n    );\n  };\n  \n  \n  \n  const renderItemstwo = (parentId = null) => {\n    return (\n      <ul>\n        {items.filter(item => item.parentId === parentId).map(displayItem)}\n      </ul>\n    );\n  };\n  \n  \n  \n\n  // Recursive function to render items\n  const renderItems = (parentId = null) => {\n  return (\n    <ul>\n      {items\n        .filter(item => item.parentId === parentId)\n        .map(item => (\n          <li key={item.id} className={item.type}>\n            <span className=\"item-icon\" onClick={() => item.type === 'folder' && toggleFolder(item.id)}>\n\n              {item.type === 'folder' ? (item.isOpen ? '▼' : '►') : '📄'}\n            </span>\n            {' '}\n            <span className=\"item-name\">\n              {item.name}\n            </span>\n            <span className=\"options-icon\" onClick={(e) => handleOptionsClick(e, item.id, 'options')}> ⋮ </span>\n            {showOptions === item.id && (\n              <ul className=\"context-menu\">\n                <li onClick={() => handleEdit(item.id)}>Edit</li>\n                <li onClick={() => handleDelete(item.id)}>Delete</li>\n              </ul>\n            )}\n            {item.type === 'folder' && item.isOpen && renderItems(item.id)}\n          </li>\n        ))}\n    </ul>\n  );\n};\n\n\n  // Function to toggle a folder open or closed\n  const toggleFolder = (folderId) => {\n    setItems(items => items.map(item => {\n      if (item.id === folderId && item.type === 'folder') {\n        return { ...item, isOpen: !item.isOpen };\n      }\n      return item;\n    }));\n  };\n  \n  \n\n  const createFolder = (parentId = null) => {\n    if (!newFolderName.trim()) {\n      setUploadError('Please enter a folder name.');\n      return;\n    }\n  \n    const newFolder = {\n      id: `folder-${Date.now()}`, // Generate a unique ID for the folder\n      name: newFolderName,\n      type: 'folder',\n      parentId: parentId, // Set the parent ID\n      isOpen: false,\n      children: [] // Initialize an empty array for children\n    };\n  \n    setItems([...items, newFolder]);\n    setNewFolderName(''); // Reset the input field\n    setUploadError(''); // Clear any previous errors\n  };\n  \n\n\n  const uploadFile = () => {\n    if (!selectedFile) {\n      setUploadError('Please select a file to upload.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    axios.post('/upload-file', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    .then(response => {\n      setUploadSuccess(true);\n      setUploadError('');\n      setItems([...items, { name: selectedFile.name, type: 'file', modified: 'Just now', members: 'Only you' }]);\n      console.log('File uploaded successfully', response.data);\n    })\n    .catch(error => {\n      setUploadSuccess(false);\n      setUploadError('Error uploading file. Please try again.');\n      console.error('Error uploading file', error);\n    });\n  };\n\n  return (\n<div className=\"data-room\" onClick={() => setContextMenu(null)}>\n      <input \n        type=\"file\" \n        onChange={(e) => setSelectedFile(e.target.files[0])}\n      />\n            <button onClick={uploadFile}>Upload File</button>\n\n\n      <input \n      class=\"form-field\"  \n              type=\"text\" \n              placeholder=\"Enter New Folder Name\" \n              value={newFolderName} \n              onChange={(e) => setNewFolderName(e.target.value)}\n            />\n      <button className=\"button-6\" onClick={createFolder}>Create Folder</button>\n      <div className=\"file-list\">\n        <h2>My Files</h2>\n        {/* {renderItems()} */}\n      </div>\n      {uploadSuccess && <div className=\"upload-success\">Your file was uploaded successfully!</div>}\n      {uploadError && <div className=\"upload-error\">{uploadError}</div>}\n        <ul className=\"file-list\">{items.map(displayItem)}</ul>\n\n\n    </div>\n  \n  );\n}\n\nexport default DataRoom;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}