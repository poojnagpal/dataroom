{"ast":null,"code":"var _jsxFileName = \"/Users/ripplingadmin/dataroom/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport Dataroom from './DataRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n  // const navigate = useNavigate();\n  // const location = useLocation();\n\n  // const handleLoginClick = (e) => {\n  //   e.preventDefault();\n  //   window.location.href = 'http://localhost:3001/auth/google';\n  // };\n\n  // useEffect(() => {\n  //   // Check if the URL contains an authorization code\n  //   const params = new URLSearchParams(location.search);\n  //   const code = params.get('code');\n\n  //   if (code) {\n  //     // Make a POST request to exchange the code for an access token\n  //     // Example:\n  //     // axios.post('/exchange-code', { code })\n  //     //   .then(response => {\n  //     //     const authToken = response.data.authToken;\n  //     //     localStorage.setItem('authToken', authToken);\n  //     //     setIsAuthenticated(true);\n  //     //     navigate('/dataroom');\n  //     //   })\n  //     //   .catch(error => {\n  //     //     console.error('Error exchanging code:', error);\n  //     //   });\n\n  //     // For this example, we'll assume authentication is successful\n  //     localStorage.setItem('authToken', 'your-auth-token');\n  //     setIsAuthenticated(true);\n  //     navigate('/dataroom');\n  //   } else {\n  //     const storedToken = localStorage.getItem('authToken');\n  //     setIsAuthenticated(!!storedToken);\n  //   }\n  // }, [location, navigate]);\n\n  // if (!isAuthenticated) {\n  //   return (\n  //     <div className=\"login-container\">\n  //       <h1>Welcome to the Data Room</h1>\n  //       <p>Please log in to continue.</p>\n  //       <button onClick={handleLoginClick}>Login with Google</button>\n  //     </div>\n  //   );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-room-container\",\n    children: /*#__PURE__*/_jsxDEV(Dataroom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","useLocation","Dataroom","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ripplingadmin/dataroom/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport Dataroom from './DataRoom';\n\nfunction App() {\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n  // const navigate = useNavigate();\n  // const location = useLocation();\n\n  // const handleLoginClick = (e) => {\n  //   e.preventDefault();\n  //   window.location.href = 'http://localhost:3001/auth/google';\n  // };\n\n  // useEffect(() => {\n  //   // Check if the URL contains an authorization code\n  //   const params = new URLSearchParams(location.search);\n  //   const code = params.get('code');\n\n  //   if (code) {\n  //     // Make a POST request to exchange the code for an access token\n  //     // Example:\n  //     // axios.post('/exchange-code', { code })\n  //     //   .then(response => {\n  //     //     const authToken = response.data.authToken;\n  //     //     localStorage.setItem('authToken', authToken);\n  //     //     setIsAuthenticated(true);\n  //     //     navigate('/dataroom');\n  //     //   })\n  //     //   .catch(error => {\n  //     //     console.error('Error exchanging code:', error);\n  //     //   });\n\n  //     // For this example, we'll assume authentication is successful\n  //     localStorage.setItem('authToken', 'your-auth-token');\n  //     setIsAuthenticated(true);\n  //     navigate('/dataroom');\n  //   } else {\n  //     const storedToken = localStorage.getItem('authToken');\n  //     setIsAuthenticated(!!storedToken);\n  //   }\n  // }, [location, navigate]);\n\n  // if (!isAuthenticated) {\n  //   return (\n  //     <div className=\"login-container\">\n  //       <h1>Welcome to the Data Room</h1>\n  //       <p>Please log in to continue.</p>\n  //       <button onClick={handleLoginClick}>Login with Google</button>\n  //     </div>\n  //   );\n  // }\n\n  return (\n    <div className=\"data-room-container\">\n      <Dataroom/>\n      {/* {isAuthenticated ? (\n        <Routes>\n          <Route path=\"/dataroom\" element={<Dataroom />} />\n          {/* Define other routes here */}\n        {/* </Routes> */}\n      {/* ) : ( */}\n        {/* <p>Please log in to access the Data Room.</p> */}\n      {/* )} */} \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACnG,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACED,OAAA;IAAKE,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCH,OAAA,CAACF,QAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASR,CAAC;AAEV;AAACC,EAAA,GA9DQP,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}